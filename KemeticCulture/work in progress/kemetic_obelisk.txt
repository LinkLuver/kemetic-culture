
raise_obelisk_decision = {
		title = raise_obelisk_decision_name
		picture = "gfx/interface/illustrations/decisions/fp1_decision_raise_runestone.dds"
		desc = raise_obelisk_decision_desc
		selection_tooltip = raise_obelisk_decision_tooltip
		major = yes
	
		cooldown = { years = 10 }
		
		sort_order = 80
	
		is_shown = {
				has_cultural_pillar = tradition_pyramid_builders
		}
	
		is_valid = {
			# Has a valid reason.
			OR = {
				custom_description = {
					text = raise_obelisk_decision_ancestor
					# For family.
					has_variable = ancestor_to_bury
				}
				custom_description = {
					text = raise_obelisk_decision_victory
					# Won a war that gained them territory.
					has_variable = recent_conquest_victory
				}
				custom_description = {
					text = raise_obelisk_decision_rank
					# Marking going up a rank.
					has_variable = recent_rank_increase
				}
			}
			NOT = {
				has_variable = has_raised_obelisk_for_ancestor
			}
		}
	
		is_valid_showing_failures_only = {
			# Standard checks.
			is_available_adult = yes
			is_at_war = no
		}
	
		cost = { gold = raise_stele_gold_cost }
	
		effect = {
			# Save the gold value for refund purposes.
			set_variable = {
				name = raise_stele_refund
				value = raise_stele_gold_cost
			}
			# Generic effects.
			show_as_tooltip = { fp1_apply_generic_stele_bonuses_effect = yes }
			# Inform that they'll be a bit weaker outside of your own culture (& similar).
			custom_tooltip = raise_obelisk_decision_tt.variable_strength
			# Show type effects.
			custom_tooltip = raise_obelisk_decision_tt.effects_list
			# Show a warning about it being destroyed if someone outside of your dynasty takes over the county it's built in
			custom_description_no_bullet = {
				text = raise_obelisk_decision_warning
			}
			# Moved ahead to selection.
			trigger_event = obelisk_raising.0101
		}
	
		ai_check_interval = 36
		
		ai_potential = {
			# Only take it if you can afford it.
			short_term_gold >= raise_stele_gold_cost
		}
	
		ai_will_do = {
			# We don't want too many runestones all over the place.
			base = 50
		}
	}